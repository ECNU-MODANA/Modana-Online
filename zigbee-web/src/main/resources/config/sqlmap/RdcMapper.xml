<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.smartcold.zigbee.manage.dao.RdcMapper">

    <select id="findRdcList" parameterType="map" resultType="RdcEntity">
         SELECT * FROM `Rdc` order by `addTime` desc
    </select>

    <select id="findRDCByRDCId" parameterType="map" resultType="RdcEntity">
        SELECT * FROM `Rdc` WHERE `id` = #{rdcID}
    </select>
	
	<select id="checkName" parameterType="String" resultType="int">
		SELECT count(name) FROM `Rdc` WHERE `name` = #{name}
	</select>
	
	<select id="checkCellphone" parameterType="String" resultType="boolean">
		SELECT count(cellphone) FROM `Rdc` WHERE `cellphone` = #{cellphone}
	</select>
	
    <insert id="insertRdc" parameterType="RdcEntity"
            useGeneratedKeys="true" keyProperty="id">
        INSERT INTO `Rdc` (
        `name`,
        `address`,
        `addtime`,
        `type`,
        `capacity`,
        `sqm`,
        `struct`,
        `storagetype`,
        `coldtype`,
        `provinceid`,
        `cityid`,
        `contact`,
        `position`,
        `cellphone`,
        `phone`,
        `commit`,
        `powerConsume`,
        `userid`
        )
        VALUES
        (
        #{name},
        #{address},
        now(),
        #{type},
        #{capacity},
        #{sqm},
        #{struct},
        #{storagetype},
        #{coldtype},
        #{provinceid},
        #{cityid},
        #{contact},
        #{position},
        #{cellphone},
        #{phone},
        #{commit},
        #{powerConsume},
        #{userid}
        );
    </insert>
    <update id="updateRdc" parameterType="com.smartcold.zigbee.manage.entity.RdcEntity" >
        update Rdc
        <set >
            <if test="address != null" >
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="sqm != null" >
                sqm = #{sqm,jdbcType=FLOAT},
            </if>
            <if test="struct != null" >
                struct = #{struct,jdbcType=VARCHAR},
            </if>
            <if test="capacity != null" >
                capacity = #{capacity,jdbcType=FLOAT},
            </if>
            <if test="cellphone != null" >
                cellphone = #{cellphone,jdbcType=VARCHAR},
            </if>
            <if test="phone != null" >
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="commit != null" >
                commit = #{commit,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>